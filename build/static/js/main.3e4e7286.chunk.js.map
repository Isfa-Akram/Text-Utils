{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/About.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","react_router_dom","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","about","href","cont","role","drop","aria-labelledby","onClick","toggleMode","htmlFor","defaultProps","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","value","onChange","event","console","log","target","rows","split","length","newText","toUpperCase","showAlert","toLowerCase","substring","obj","upper","lower","map","word","index","charAt","slice","join","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","document","getElementById","select","navigator","clipboard","writeText","body","style","backgroundColor","About","color","MyStyle","setMyStyle","_useState3","_useState4","BtnText","setBtnText","data-bs-parent","Capitalize","Alert","alert","App","SetMode","setAlert","message","setInterval","react_router","exact","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.3e4e7286.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//props\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n    <Link className=\"navbar-brand\" to=\"/text\">{props.title}</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n        <Link className=\"nav-link active\" aria-current=\"page\" to=\"/text\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/\">{props.cont}</a>\r\n        </li>\r\n\r\n        <li className=\"nav-item dropdown\">\r\n          <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            {props.drop}\r\n          </a>\r\n          <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n      {/*<form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-dark\" type=\"submit\">Search</button>\r\n      </form>*/}\r\n\r\n      <div className=\"form-check form-switch text-light\">\r\n        <input type=\"checkbox\" className=\"form-check-input\" onClick={props.toggleMode} id=\"customSwitch1\"/>\r\n        <label className=\"form-check-label1\" htmlFor=\"customSwitch1\">Enable DarkMode</label>\r\n    </div>\r\n\r\n\r\n\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\n\r\n//proptypes\r\n//isRequired is used to must fill its place otherwise it will gives us an error but if some default value is set\r\n// then it will occupies an empty space\r\nNavbar.propTypes = {\r\n  title :PropTypes.string.isRequired,\r\n  about :PropTypes.string,\r\n  cont: PropTypes.string\r\n\r\n}\r\n\r\nNavbar.defaultProps={\r\n  title: 'mention your title please',\r\n  about: 'tell some new about your textutils'\r\n}\r\n\r\n","import React ,{useState} from 'react'\r\nimport './style.css';\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n//text is basically a state, setText is used to update a text \r\n//this is the syntax of hooks we can set or update value by using this hook\r\n\r\n//text=\"update text\" //this is a wrong way to update a text react will give us an error\r\n//setText=(\"new text\"); //this is a correct way to update a text \r\n\r\nconst[text, setText] = useState(\"Enter Your Text\");\r\n\r\nconst UpperTextChange = ()=>{\r\nconsole.log(\"UpperCase button was clicked\");\r\nlet newText = text.toUpperCase();\r\nsetText(newText);\r\nprops.showAlert(\"Converted to Upper Case\",\"success\");\r\n\r\n\r\n}\r\n\r\nconst LowerTextChange = ()=>{\r\nconsole.log(\"LowerCase button was clicked\");\r\nlet newText= text.toLowerCase();\r\nsetText(newText);\r\nprops.showAlert(\"Converted to Lower Case\",\"success\");\r\n}\r\n\r\nconst ClearText = ()=>{\r\nconsole.log(\"ClearText button was clicked\");\r\nlet newText= \" \";\r\nsetText(newText);\r\nprops.showAlert(\"Cleared Text\",\"success\");\r\n  \r\n}\r\n\r\nconst SubString = ()=>{\r\n\r\nlet newText= text.substring(7,39);\r\nsetText(\"The substring of sentence is: \" + newText);\r\nprops.showAlert(\"Converted to Sub String\",\"success\"); \r\n}\r\n\r\nconst Speak = () => {\r\nlet msg = new SpeechSynthesisUtterance();\r\nmsg.text = text;\r\nwindow.speechSynthesis.speak(msg);\r\nprops.showAlert(\"Listening Text Mode is Enabled\",\"success\");\r\n\r\n}\r\n\r\nconst handleOnChange = (event)=>{\r\nconsole.log(\"On Change function was envoked\");\r\n//we can write some values in text box with the help of this setText \r\nsetText(event.target.value);\r\n\r\n\r\n}\r\n\r\nconst InvertCase =()=>{\r\n  \r\n  let obj;\r\n\r\n  let upper= text.toUpperCase();\r\n  let lower= text.toLowerCase();\r\n\r\n  //if(obj===text.toUpperCase())\r\n  if(obj===upper)\r\n  {\r\n    //obj=text.toLowerCase;\r\n    obj=lower;\r\n    setText(obj);\r\n    console.log(\"hello \");\r\n  }\r\n  else\r\n  {\r\n    //obj=text.toUpperCase();\r\n    obj=upper;\r\n    setText(obj);\r\n  }\r\n  props.showAlert(\"Converted to Invert Case\",\"success\");\r\n}\r\n\r\nconst TitleCase=() =>{\r\n    let newText = text.split(\" \").map(function (word, index) {\r\n    return word.charAt(0)\r\n        .toUpperCase() + word.slice(1)\r\n        .toLowerCase();\r\n    })\r\n    .join(' ');\r\n  setText(newText);\r\n  props.showAlert(\"Converted to Title Case\",\"success\");\r\n\r\n    }\r\n\r\n  const LightBack=() =>{\r\n      document.body.style.backgroundColor = \"lightgrey\";\r\n      props.showAlert(\"LightGrey Color Enabled\",\"success\");\r\n      }\r\n  const DarkBack=() =>{\r\n        document.body.style.backgroundColor = \"Black\";\r\n        props.showAlert(\"Black Color Enabled\",\"success\");\r\n        }\r\n\r\n  const CopyText= ()=>{\r\n    let obj = document.getElementById(\"box\");\r\n    obj.select();\r\n    navigator.clipboard.writeText(obj.value);\r\n    props.showAlert(\"Text is Copied\",\"success\");\r\n\r\n  }\r\n  \r\n  const ExtraSpace=()=>{\r\n      let obj=text.split(/[  ]+/);\r\n      setText(obj.join(\" \"));\r\n      props.showAlert(\"Extra Space has been removed\",\"success\");\r\n\r\n  }\r\n\r\nreturn (\r\n<>\r\n<div>\r\n    <div className=\"mb-3\">\r\n        <h5><label htmlFor=\"box\" className=\"form-label text-success\">{props.heading}</label></h5>\r\n        {/*onchange() event is used to type in text area otherwise we will type it */}\r\n        <textarea className=\"form-control\" id=\"box\" value={text} onChange={ handleOnChange} rows=\"10\"></textarea>\r\n    </div>\r\n\r\n    <div className=\"container my-3\">\r\n        <h6 className=\"text-success\">The count of words is:{ text.split(\" \").length} </h6>\r\n        <h6 className=\"text-success\">The count of characters is:{ text.length} </h6>\r\n        <h6 className=\"text-success\">The time to read these words is:{ 0.008 * text.split(\" \").length} minutes </h6>\r\n        <h5 className=\"text-dark my-3\">Preview</h5>\r\n        <h6 className=\"text-success\">{text}</h6>\r\n    </div>\r\n\r\n    <div className=\"container my-3\">\r\n        <button className=\"bg-success mx-2\" onClick={UpperTextChange} >Covert to UpperCase</button>\r\n        <button className=\"bg-success mx-2\" onClick={LowerTextChange} >Covert to LowerCase</button>\r\n        <button className=\"bg-success mx-2\" onClick={ClearText} >Clear Text</button>\r\n        <button className=\"bg-success mx-2\" onClick={SubString} >SubString</button>\r\n        \r\n        <button className=\"bg-success mx-2\" onClick={InvertCase} >Invert Case</button>\r\n\r\n        <button className=\"bg-success mx-2\" onClick={TitleCase} >Title Case</button>\r\n        <button className=\"bg-success mx-2\" onClick={Speak} >Speak</button>\r\n        <button className=\"bg-success mx-2\" onClick={CopyText} >Copy Text</button>\r\n\r\n        <button className=\"bg-success mx-2 my-4\" onClick={ExtraSpace} >Remove Extra Spaces</button>\r\n        <span><button className=\"bg-success mx-2 \" onClick={LightBack} >Change you background with lighter mode</button></span>\r\n        <button className=\"bg-success mx-2\" onClick={DarkBack} >Change you background with darker mode</button>\r\n       </div>\r\n\r\n</div>\r\n\r\n</>\r\n)\r\n\r\n}\r\n\r\n","import React ,{useState} from 'react'\r\n\r\n export default function About() {\r\n\r\n    const[MyStyle, setMyStyle]= useState({\r\n        backgroundColor : 'white',\r\n        color: 'black'\r\n   })\r\n\r\n   const[BtnText, setBtnText]=useState(\"Enable Dark Mode\");\r\n   \r\n   const Toggle = ()=>{\r\n   \r\n   if(MyStyle.color==='white')\r\n       {\r\n           setMyStyle({backgroundColor : 'white',\r\n           color: 'black'})\r\n   \r\n           setBtnText(\"Enable Dark Mode\");\r\n\r\n       }\r\n   else\r\n       {\r\n           setMyStyle({backgroundColor : 'black',\r\n           color: 'white'})\r\n           setBtnText(\"Enable Light Mode\");\r\n\r\n       }\r\n   \r\n   }\r\n\r\nreturn (\r\n<div className=\"container my-5\">\r\n    <div className=\"accordion\" id=\"accordionExample\" style={MyStyle}>\r\n<div className=\"accordion-item\">\r\n<h2 className=\"accordion-header\" id=\"headingOne\">\r\n    <button className=\"accordion-button\" style={MyStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n    Accordion Item #1\r\n    </button>\r\n</h2>\r\n<div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n    <div className=\"accordion-body\" style={MyStyle}>\r\n    <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n    </div>\r\n</div>\r\n</div>\r\n<div className=\"accordion-item\">\r\n<h2 className=\"accordion-header\" id=\"headingTwo\">\r\n    <button className=\"accordion-button collapsed\" style={MyStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n    Accordion Item #2\r\n    </button>\r\n</h2>\r\n<div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n    <div className=\"accordion-body\" style={MyStyle}>\r\n    <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n    </div>\r\n</div>\r\n</div>\r\n<div className=\"accordion-item\">\r\n<h2 className=\"accordion-header\" id=\"headingThree\">\r\n    <button className=\"accordion-button collapsed\" style={MyStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n    Accordion Item #3\r\n    </button>\r\n</h2>\r\n<div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n    <div className=\"accordion-body \" style={MyStyle}>\r\n    <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n    </div>\r\n</div>\r\n</div>\r\n</div>\r\n<div className=\"container my-3\">\r\n    <button className=\"btn btn-primary\" onClick={Toggle}>{BtnText}</button>\r\n</div>\r\n\r\n</div>\r\n)\r\n}\r\n","    import React from 'react'\r\n\r\n  /*props.alert is basically working like an if-else sttement if props.alert is null then it will automatically\r\n  not evaluate the next part*/\r\n\r\n    const Capitalize=(word)=>\r\n    {\r\n      let lower= word.toLowerCase();\r\n      return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n\r\n\r\n    export default function Alert(props) {\r\n    return (\r\n    \r\n     props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n      <strong>{Capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n      </div>\r\n    \r\n    );\r\n    }\r\n","\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport About from './Components/About';\nimport React, { useState } from 'react';\nimport Alert from './Components/Alert';\nimport {\n  BrowserRouter as Router,\n  Routes ,\n  Route\n  \n} from 'react-router-dom';\n\n\n\nfunction App() {\n\n  const[mode, SetMode]= useState('success');\n\n  {/*initially alert is null*/}\n  const[alert,setAlert]=useState(null);\n\n  {/*now we are making alert as an object*/}\n  const showAlert =(message,type)=>\n  {\n    setAlert(\n    {\n      msg:message,\n      type:type\n    })\n\n    setInterval(() => {\n      setAlert(null);}, 3000);\n  }\n\n\n  const toggleMode=()=>\n  {\n    if(mode==='success')\n    {\n      SetMode('dark');\n     document.body.style.backgroundColor = '#042743';\n     showAlert(\"Dark Mode has been enabled\", \"success\");\n     document.title='TextUtils-Dark Mode';\n    \n    }\n\n    else\n    {\n      SetMode('success');\n      document.body.style.backgroundColor = 'white';\n     showAlert(\"Light Mode has been enabled\", \"success\");\n     document.title='TextUtils-Light Mode';\n\n\n     //function to change title after certain interval of time\n     /*setInterval(() => {\n      document.title='Enabled Dark mode';}, 2000);*/\n    \n\n    }\n  }\n\n\n  return (\n    <>\n<Router>\n   <Navbar title=\"TextUtils\" about=\"About Us\" cont=\"Contact\" drop=\"Dropdown\" mode={mode} toggleMode={toggleMode}/> \n    \n    <Alert alert={alert}/>\n\n   <div className=\" container my-5\">\n\n    <Routes>\n\n        <Route exact path='/about'\n        element={<About/>}/>\n        \n\n        <Route exact path='/text'\n        element={<TextForm heading=\"ENTER YOUR TEXT TO ANALYZE BELOW\" showAlert={showAlert}/>}/>\n        \n    </Routes>\n    \n    </div>\n\n</Router>\n  \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}